{"ast":null,"code":"require(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.for-each.js\");\n// サイドバー\ndocument.addEventListener('DOMContentLoaded', () => {\n  const sidebar = document.getElementById('sidebar');\n  const toggleBtn = document.getElementById('toggleSidebarBtn');\n  const container = document.getElementById('container');\n  // 開閉切り替え\n  toggleBtn.addEventListener('click', () => {\n    sidebar.classList.toggle('closed');\n    container.classList.toggle('closed');\n  });\n\n  // ウィンドウサイズで自動クローズ\n  function handleResize() {\n    if (window.innerWidth <= 768) {\n      sidebar.classList.add('closed');\n      container.classList.toggle('closed');\n    }\n  }\n  window.addEventListener('resize', handleResize);\n  handleResize(); // 初期実行\n});\n\n// =============背景色\n\n// 背景色の管理とテキストカラーの自動調整\nclass ColorManager {\n  constructor() {\n    this.colorPicker = document.getElementById('colorPicker');\n    this.init();\n  }\n  init() {\n    // パフォーマンスナビゲーション（サイト内遷移かどうかの判定）\n    const navigation = performance.getEntriesByType(\"navigation\")[0];\n    const navigationType = navigation.type;\n\n    // リロード時のみ背景色をリセット\n    if (navigationType === 'reload') {\n      this.applyColor('#ffffff');\n      this.colorPicker.value = '#ffffff';\n    } else {\n      // サイト内遷移の場合は保存された背景色を適用\n      const savedColor = localStorage.getItem('backgroundColor') || '#ffffff';\n      this.applyColor(savedColor);\n      this.colorPicker.value = savedColor;\n    }\n\n    // カラーピッカーの変更イベント\n    this.colorPicker.addEventListener('input', e => {\n      const selectedColor = e.target.value;\n      this.applyColor(selectedColor);\n    });\n  }\n\n  // 背景色の明度を計算\n  getLuminance(hexColor) {\n    // hexをRGBに変換\n    const r = parseInt(hexColor.substr(1, 2), 16) / 255;\n    const g = parseInt(hexColor.substr(3, 2), 16) / 255;\n    const b = parseInt(hexColor.substr(5, 2), 16) / 255;\n\n    // 相対輝度を計算\n    // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    return luminance;\n  }\n\n  // 色を適用し、テキストカラーを自動調整\n  applyColor(color) {\n    const sidebar = document.getElementById('sidebar-left');\n    document.body.style.backgroundColor = color;\n    sidebar.style.backgroundColor = color;\n    localStorage.setItem('backgroundColor', color);\n    const luminance = this.getLuminance(color);\n    const textColor = luminance > 0.5 ? getComputedStyle(document.documentElement).getPropertyValue('--font-white').trim() : getComputedStyle(document.documentElement).getPropertyValue('--font-black').trim();\n\n    // ボーダーとシャドウの色を設定\n    const borderColor = luminance > 0.5 ? 'rgba(0, 0, 0, 0.2)' : 'rgba(255, 255, 255, 0.2)';\n    document.documentElement.style.setProperty('--img-gray', borderColor);\n    document.body.style.color = textColor;\n\n    // リンクやその他のテキスト要素に適用\n    const textElements = document.querySelectorAll('h1, h2, h3, p, a, span, div,button');\n    textElements.forEach(element => {\n      element.style.color = textColor;\n    });\n\n    // サイドバーのテキストとシャドウに適用\n    // const sidebar = document.querySelector('.sidebar-left');\n    if (sidebar) {\n      sidebar.style.boxShadow = `0px 0px 3px ${borderColor}`;\n    }\n\n    // サイドバーのリンクに適用\n    const sidebarLinks = document.querySelectorAll('#sidebar a');\n    sidebarLinks.forEach(link => {\n      link.style.color = textColor;\n    });\n\n    // カラーピッカーのボーダーに適用\n    const colorPicker = document.querySelector('.color-picker');\n    if (colorPicker) {\n      colorPicker.style.borderColor = borderColor;\n    }\n\n    // 画像のボーダーに適用\n    const images = document.querySelectorAll('img');\n    images.forEach(img => {\n      img.style.borderColor = borderColor;\n    });\n\n    // .lineクラスの背景色を更新\n    const lineElements = document.querySelectorAll('.line');\n    lineElements.forEach(line => {\n      line.style.background = textColor;\n    });\n  }\n}\n\n// DOMの読み込み完了後に初期化\ndocument.addEventListener('DOMContentLoaded', () => {\n  new ColorManager();\n});","map":{"version":3,"names":["document","addEventListener","sidebar","getElementById","toggleBtn","container","classList","toggle","handleResize","window","innerWidth","add","ColorManager","constructor","colorPicker","init","navigation","performance","getEntriesByType","navigationType","type","applyColor","value","savedColor","localStorage","getItem","e","selectedColor","target","getLuminance","hexColor","r","parseInt","substr","g","b","luminance","color","body","style","backgroundColor","setItem","textColor","getComputedStyle","documentElement","getPropertyValue","trim","borderColor","setProperty","textElements","querySelectorAll","forEach","element","boxShadow","sidebarLinks","link","querySelector","images","img","lineElements","line","background"],"sources":["/Users/yusui/GitHub/Mono/site2/src/assets/scripts/script.js"],"sourcesContent":["// サイドバー\ndocument.addEventListener('DOMContentLoaded', () => {\n    const sidebar = document.getElementById('sidebar');\n    const toggleBtn = document.getElementById('toggleSidebarBtn');\n    const container = document.getElementById('container');\n    // 開閉切り替え\n    toggleBtn.addEventListener('click', () => {\n      sidebar.classList.toggle('closed');\n      container.classList.toggle('closed');\n    });\n  \n    // ウィンドウサイズで自動クローズ\n    function handleResize() {\n      if (window.innerWidth <= 768) {\n        sidebar.classList.add('closed');\n        container.classList.toggle('closed');\n      }\n    }\n  \n    window.addEventListener('resize', handleResize);\n    handleResize(); // 初期実行\n  });\n  \n  // =============背景色\n  \n  // 背景色の管理とテキストカラーの自動調整\n  class ColorManager {\n    constructor() {\n        this.colorPicker = document.getElementById('colorPicker');\n        this.init();\n    }\n  \n    init() {\n        // パフォーマンスナビゲーション（サイト内遷移かどうかの判定）\n        const navigation = performance.getEntriesByType(\"navigation\")[0];\n        const navigationType = navigation.type;\n  \n        // リロード時のみ背景色をリセット\n        if (navigationType === 'reload') {\n            this.applyColor('#ffffff');\n            this.colorPicker.value = '#ffffff';\n        } else {\n            // サイト内遷移の場合は保存された背景色を適用\n            const savedColor = localStorage.getItem('backgroundColor') || '#ffffff';\n            this.applyColor(savedColor);\n            this.colorPicker.value = savedColor;\n        }\n        \n        // カラーピッカーの変更イベント\n        this.colorPicker.addEventListener('input', (e) => {\n            const selectedColor = e.target.value;\n            this.applyColor(selectedColor);\n        });\n    }\n  \n    // 背景色の明度を計算\n    getLuminance(hexColor) {\n        // hexをRGBに変換\n        const r = parseInt(hexColor.substr(1,2), 16) / 255;\n        const g = parseInt(hexColor.substr(3,2), 16) / 255;\n        const b = parseInt(hexColor.substr(5,2), 16) / 255;\n  \n        // 相対輝度を計算\n        // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n        const luminance = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        return luminance;\n    }\n  \n    // 色を適用し、テキストカラーを自動調整\n    applyColor(color) {\n        const sidebar = document.getElementById('sidebar-left');\n      \n        document.body.style.backgroundColor = color;\n        sidebar.style.backgroundColor = color;\n        localStorage.setItem('backgroundColor', color);\n  \n        const luminance = this.getLuminance(color);\n        const textColor = luminance > 0.5 ? \n            getComputedStyle(document.documentElement).getPropertyValue('--font-white').trim() : \n            getComputedStyle(document.documentElement).getPropertyValue('--font-black').trim();\n  \n        // ボーダーとシャドウの色を設定\n        const borderColor = luminance > 0.5 ? 'rgba(0, 0, 0, 0.2)' : 'rgba(255, 255, 255, 0.2)';\n        document.documentElement.style.setProperty('--img-gray', borderColor);\n  \n        document.body.style.color = textColor;\n  \n        // リンクやその他のテキスト要素に適用\n        const textElements = document.querySelectorAll('h1, h2, h3, p, a, span, div,button');\n        textElements.forEach(element => {\n            element.style.color = textColor;\n        });\n  \n        // サイドバーのテキストとシャドウに適用\n        // const sidebar = document.querySelector('.sidebar-left');\n        if (sidebar) {\n            sidebar.style.boxShadow = `0px 0px 3px ${borderColor}`;\n        }\n  \n        // サイドバーのリンクに適用\n        const sidebarLinks = document.querySelectorAll('#sidebar a');\n        sidebarLinks.forEach(link => {\n            link.style.color = textColor;\n        });\n  \n        // カラーピッカーのボーダーに適用\n        const colorPicker = document.querySelector('.color-picker');\n        if (colorPicker) {\n            colorPicker.style.borderColor = borderColor;\n        }\n  \n        // 画像のボーダーに適用\n        const images = document.querySelectorAll('img');\n        images.forEach(img => {\n            img.style.borderColor = borderColor;\n        });\n  \n        // .lineクラスの背景色を更新\n        const lineElements = document.querySelectorAll('.line');\n        lineElements.forEach(line => {\n            line.style.background = textColor;\n        });\n    }\n  }\n  \n  // DOMの読み込み完了後に初期化\n  document.addEventListener('DOMContentLoaded', () => {\n    new ColorManager();\n  });"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}