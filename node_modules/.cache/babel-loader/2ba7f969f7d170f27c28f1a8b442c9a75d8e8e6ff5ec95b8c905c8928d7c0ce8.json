{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Card from '@/components/Card.vue';\nimport Sidebar from '@/components/Sidebar.vue';\nimport { works } from '@/data/works';\nimport TitlePage from '@/components/Title.vue';\nimport { masonryMixin } from '@/assets/scripts/masonry.js';\nimport imagesLoaded from 'imagesloaded';\nexport default {\n  name: 'WorksPage',\n  components: {\n    Card: Card,\n    Sidebar: Sidebar,\n    TitlePage: TitlePage\n  },\n  mixins: [masonryMixin],\n  data: function data() {\n    return {\n      categories: [{\n        value: 'all',\n        label: 'すべて'\n      }, {\n        value: 'art',\n        label: 'アート'\n      }, {\n        value: 'drawing',\n        label: 'イラスト'\n      }, {\n        value: 'photo',\n        label: '写真'\n      }, {\n        value: 'product',\n        label: 'プロダクト'\n      }, {\n        value: 'poster',\n        label: 'ポスター'\n      }, {\n        value: 'modeling',\n        label: 'モデリング'\n      }, {\n        value: 'logo',\n        label: 'ロゴ'\n      }, {\n        value: 'other',\n        label: 'その他'\n      }],\n      works: works,\n      isLayoutUpdating: false\n    };\n  },\n  computed: {\n    selectedCategory: {\n      get: function get() {\n        return this.$route.query.category || 'all';\n      },\n      set: function set(value) {\n        this.$router.replace({\n          query: {\n            category: value === 'all' ? null : value\n          }\n        });\n      }\n    },\n    filteredWorks: function filteredWorks() {\n      var _this = this;\n      if (this.selectedCategory === 'all') {\n        return this.works;\n      }\n      return this.works.filter(function (work) {\n        return work.category === _this.selectedCategory;\n      });\n    }\n  },\n  watch: {\n    selectedCategory: function selectedCategory() {\n      var _this2 = this;\n      if (this.isLayoutUpdating) return;\n      this.isLayoutUpdating = true;\n\n      // DOMの更新を待つ\n      this.$nextTick(function () {\n        var grid = document.getElementById('grid');\n        if (!grid || !_this2.masonry) {\n          _this2.isLayoutUpdating = false;\n          return;\n        }\n\n        // 既存のimagesLoadedイベントリスナーを削除\n        var images = grid.getElementsByTagName('img');\n        Array.from(images).forEach(function (img) {\n          img.removeEventListener('load', _this2.onImageLoad);\n        });\n\n        // 新しい画像の読み込みを待つ\n        imagesLoaded(grid, function () {\n          _this2.masonry.layout();\n          _this2.isLayoutUpdating = false;\n        });\n      });\n    }\n  },\n  methods: {\n    updateMasonryLayout: function updateMasonryLayout() {\n      var _this3 = this;\n      if (!this.masonry) return;\n\n      // 全ての画像の読み込みを待つ\n      var images = document.querySelectorAll('#grid img');\n      var loadedImages = 0;\n      var onImageLoad = function onImageLoad() {\n        loadedImages++;\n        if (loadedImages === images.length) {\n          _this3.masonry.layout();\n        }\n      };\n      images.forEach(function (img) {\n        if (img.complete) {\n          onImageLoad();\n        } else {\n          img.addEventListener('load', onImageLoad);\n        }\n      });\n\n      // 念のため、少し待ってからもレイアウトを更新\n      setTimeout(function () {\n        _this3.masonry.layout();\n      }, 100);\n    }\n  },\n  mounted: function mounted() {\n    this.updateMasonryLayout();\n  }\n};","map":{"version":3,"names":["Card","Sidebar","works","TitlePage","masonryMixin","imagesLoaded","name","components","mixins","data","categories","value","label","isLayoutUpdating","computed","selectedCategory","get","$route","query","category","set","$router","replace","filteredWorks","_this","filter","work","watch","_this2","$nextTick","grid","document","getElementById","masonry","images","getElementsByTagName","Array","from","forEach","img","removeEventListener","onImageLoad","layout","methods","updateMasonryLayout","_this3","querySelectorAll","loadedImages","length","complete","addEventListener","setTimeout","mounted"],"sources":["/Users/yusui/GitHub/Mono/site/src/views/Works.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <TitlePage\n      title=\"Works\"\n      description=\"作品集\"\n    />\n\n    <div class=\"category-selecter\">\n      <button \n        v-for=\"cat in categories\" \n        :key=\"cat.value\"\n        :class=\"{ active: selectedCategory === cat.value }\"\n        @click=\"selectedCategory = cat.value\"\n      >\n        {{ cat.label }}\n      </button>\n    </div>\n\n    <div id=\"grid\">\n      <div class=\"grid-sizer\"></div>\n      <div class=\"gutter-sizer\"></div>\n      <Card\n        v-for=\"work in filteredWorks\"\n        :key=\"work.id\"\n        :id=\"work.id\"\n        :title=\"work.title\"\n        :image=\"work.image\"\n        :year=\"work.year\"\n        :category=\"work.category\"\n        :content=\"work.content\"\n        class=\"grid-item\"\n      />\n    </div>\n  </div>\n  <Sidebar />\n</template>\n\n<script>\nimport Card from '@/components/Card.vue';\nimport Sidebar from '@/components/Sidebar.vue';\nimport { works } from '@/data/works';\nimport TitlePage from '@/components/Title.vue';\nimport { masonryMixin } from '@/assets/scripts/masonry.js';\nimport imagesLoaded from 'imagesloaded';\n\nexport default {\n  name: 'WorksPage',\n  components: {\n    Card,\n    Sidebar,\n    TitlePage\n  },\n  mixins: [masonryMixin],\n  data() {\n    return {\n      categories: [\n        { value: 'all', label: 'すべて' },\n        { value: 'art', label: 'アート' },\n        { value: 'drawing', label: 'イラスト' },\n        { value: 'photo', label: '写真' },\n        { value: 'product', label: 'プロダクト' },\n        { value: 'poster', label: 'ポスター' },\n        { value: 'modeling', label: 'モデリング' },\n        { value: 'logo', label: 'ロゴ' },\n        { value: 'other', label: 'その他' }\n      ],\n      works,\n      isLayoutUpdating: false\n    };\n  },\n  computed: {\n    selectedCategory: {\n      get() {\n        return this.$route.query.category || 'all';\n      },\n      set(value) {\n        this.$router.replace({ query: { category: value === 'all' ? null : value } });\n      }\n    },\n    filteredWorks() {\n      if (this.selectedCategory === 'all') {\n        return this.works;\n      }\n      return this.works.filter(work => work.category === this.selectedCategory);\n    }\n  },\n  watch: {\n    selectedCategory() {\n      if (this.isLayoutUpdating) return;\n      this.isLayoutUpdating = true;\n\n      // DOMの更新を待つ\n      this.$nextTick(() => {\n        const grid = document.getElementById('grid');\n        if (!grid || !this.masonry) {\n          this.isLayoutUpdating = false;\n          return;\n        }\n\n        // 既存のimagesLoadedイベントリスナーを削除\n        const images = grid.getElementsByTagName('img');\n        Array.from(images).forEach(img => {\n          img.removeEventListener('load', this.onImageLoad);\n        });\n\n        // 新しい画像の読み込みを待つ\n        imagesLoaded(grid, () => {\n          this.masonry.layout();\n          this.isLayoutUpdating = false;\n        });\n      });\n    }\n  },\n  methods: {\n    updateMasonryLayout() {\n      if (!this.masonry) return;\n      \n      // 全ての画像の読み込みを待つ\n      const images = document.querySelectorAll('#grid img');\n      let loadedImages = 0;\n      \n      const onImageLoad = () => {\n        loadedImages++;\n        if (loadedImages === images.length) {\n          this.masonry.layout();\n        }\n      };\n\n      images.forEach(img => {\n        if (img.complete) {\n          onImageLoad();\n        } else {\n          img.addEventListener('load', onImageLoad);\n        }\n      });\n\n      // 念のため、少し待ってからもレイアウトを更新\n      setTimeout(() => {\n        this.masonry.layout();\n      }, 100);\n    }\n  },\n  mounted() {\n    this.updateMasonryLayout();\n  }\n};\n</script>\n\n<style scoped>\n\n\n.category-selecter {\n  margin-bottom: 30px;\n  width: 100%;\n  display: flex;\n  justify-content: left;\n  gap: 20px;\n  text-align: center;\n\n  button {\n    padding: 8px 8px;\n    border: none;\n    border-radius: 0px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    background: none;\n\n    &:hover {\n      background: #d4cfcf;\n    }\n  }\n\n  button.active {\n    background: #333;\n    color: white;\n  }\n}\n\n#grid {\n  width: 100%;\n  margin: 0 auto;\n  font-size: 0; /* インラインブロック間の隙間を消す */\n\n  .grid-sizer,\n  .grid-item {\n    width: calc(50% - 10px); /* 横の余白を調整 */\n  }\n\n  .gutter-sizer {\n    width: 20px; /* 横の余白を調整 */\n  }\n\n  .grid-item {\n    margin-bottom: 20px; /* 縦の余白を少し減らす */\n    display: inline-block;\n    font-size: 16px; /* フォントサイズを戻す */\n    vertical-align: top; /* 上端揃えにする */\n  }\n\n  .grid-item img {\n    width: 100%;\n    height: auto;\n    display: block; /* 画像下部の余白を消す */\n    border: var(--img-gray) 1px solid;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .gallery-container {\n    padding: 10px;\n    padding-top: 80px; /* タイトルの高さ分の余白を維持 */\n  }\n\n  #grid {\n    .grid-sizer,\n    .grid-item {\n      width: 100%;\n      margin-bottom: 15px;\n    }\n\n    .gutter-sizer {\n      width: 0;\n    }\n  }\n\n  .category-selecter {\n    flex-wrap: wrap;\n    gap: 10px;\n    justify-content: center;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}