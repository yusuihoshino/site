{"ast":null,"code":"/* global Masonry, imagesLoaded */\n\nexport var masonryMixin = {\n  data: function data() {\n    return {\n      masonry: null\n    };\n  },\n  mounted: function mounted() {\n    this.initMasonry();\n  },\n  methods: {\n    initMasonry: function initMasonry() {\n      var _this = this;\n      this.$nextTick(function () {\n        var grid = document.getElementById('grid');\n        if (!grid) return;\n\n        // 既存のMasonryインスタンスがあれば破棄\n        if (_this.masonry) {\n          _this.masonry.destroy();\n        }\n        _this.masonry = new Masonry(grid, {\n          itemSelector: '.grid-item',\n          columnWidth: '.grid-sizer',\n          gutter: '.gutter-sizer',\n          percentPosition: true,\n          transitionDuration: 0 // アニメーションを無効化\n        });\n\n        // 画像が読み込まれた後にレイアウトを更新\n        imagesLoaded(grid).on('progress', function () {\n          _this.masonry.layout();\n        }).on('done', function () {\n          _this.masonry.layout();\n        });\n      });\n    }\n  },\n  updated: function updated() {\n    var _this2 = this;\n    this.$nextTick(function () {\n      // DOM更新後にMasonryを再初期化\n      _this2.initMasonry();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.masonry) {\n      this.masonry.destroy();\n    }\n  }\n};","map":{"version":3,"names":["masonryMixin","data","masonry","mounted","initMasonry","methods","_this","$nextTick","grid","document","getElementById","destroy","Masonry","itemSelector","columnWidth","gutter","percentPosition","transitionDuration","imagesLoaded","on","layout","updated","_this2","beforeDestroy"],"sources":["/Users/yusui/GitHub/Mono/site/src/assets/scripts/masonry.js"],"sourcesContent":["/* global Masonry, imagesLoaded */\n\nexport const masonryMixin = {\n  data() {\n    return {\n      masonry: null\n    };\n  },\n\n  mounted() {\n    this.initMasonry();\n  },\n\n  methods: {\n    initMasonry() {\n      this.$nextTick(() => {\n        const grid = document.getElementById('grid');\n        if (!grid) return;\n\n        // 既存のMasonryインスタンスがあれば破棄\n        if (this.masonry) {\n          this.masonry.destroy();\n        }\n\n        this.masonry = new Masonry(grid, {\n          itemSelector: '.grid-item',\n          columnWidth: '.grid-sizer',\n          gutter: '.gutter-sizer',\n          percentPosition: true,\n          transitionDuration: 0 // アニメーションを無効化\n        });\n\n        // 画像が読み込まれた後にレイアウトを更新\n        imagesLoaded(grid).on('progress', () => {\n          this.masonry.layout();\n        }).on('done', () => {\n          this.masonry.layout();\n        });\n      });\n    }\n  },\n\n  updated() {\n    this.$nextTick(() => {\n      // DOM更新後にMasonryを再初期化\n      this.initMasonry();\n    });\n  },\n\n  beforeDestroy() {\n    if (this.masonry) {\n      this.masonry.destroy();\n    }\n  }\n};"],"mappings":"AAAA;;AAEA,OAAO,IAAMA,YAAY,GAAG;EAC1BC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAEDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDC,OAAO,EAAE;IACPD,WAAW,WAAXA,WAAWA,CAAA,EAAG;MAAA,IAAAE,KAAA;MACZ,IAAI,CAACC,SAAS,CAAC,YAAM;QACnB,IAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;QAC5C,IAAI,CAACF,IAAI,EAAE;;QAEX;QACA,IAAIF,KAAI,CAACJ,OAAO,EAAE;UAChBI,KAAI,CAACJ,OAAO,CAACS,OAAO,CAAC,CAAC;QACxB;QAEAL,KAAI,CAACJ,OAAO,GAAG,IAAIU,OAAO,CAACJ,IAAI,EAAE;UAC/BK,YAAY,EAAE,YAAY;UAC1BC,WAAW,EAAE,aAAa;UAC1BC,MAAM,EAAE,eAAe;UACvBC,eAAe,EAAE,IAAI;UACrBC,kBAAkB,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC;;QAEF;QACAC,YAAY,CAACV,IAAI,CAAC,CAACW,EAAE,CAAC,UAAU,EAAE,YAAM;UACtCb,KAAI,CAACJ,OAAO,CAACkB,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,CAACD,EAAE,CAAC,MAAM,EAAE,YAAM;UAClBb,KAAI,CAACJ,OAAO,CAACkB,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;EAEDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,MAAA;IACR,IAAI,CAACf,SAAS,CAAC,YAAM;MACnB;MACAe,MAAI,CAAClB,WAAW,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;EAEDmB,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACrB,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACS,OAAO,CAAC,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}