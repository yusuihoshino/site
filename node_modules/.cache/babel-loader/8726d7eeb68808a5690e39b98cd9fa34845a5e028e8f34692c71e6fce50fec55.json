{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"category\"\n};\nconst _hoisted_6 = {\n  key: 2\n};\nconst _hoisted_7 = {\n  class: \"card-meta\"\n};\nconst _hoisted_8 = {\n  key: 3,\n  class: \"year\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: $props.image,\n    alt: $props.title\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [$props.title ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_4, _toDisplayString($props.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $props.category ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($props.category), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $props.description ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($props.description), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_renderSlot(_ctx.$slots, \"meta\", {}, undefined, true)]), _createCommentVNode(\" <div class=\\\"tags\\\" v-if=\\\"tags && tags.length\\\"> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tags, (tag, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: \"tag\"\n    }, _toDisplayString(tag), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" </div> \"), $props.year ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($props.year), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","src","$props","image","alt","title","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_createCommentVNode","category","_hoisted_5","description","_hoisted_6","_hoisted_7","_renderSlot","_ctx","$slots","undefined","_Fragment","_renderList","tags","tag","index","year","_hoisted_8"],"sources":["/Users/yusui/GitHub/Mono/site2/src/components/Card.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <img :src=\"image\" :alt=\"title\">\n    <div class=\"content\">\n\n      <h3 v-if=\"title\">{{ title }}</h3>\n      <span v-if=\"category\" class=\"category\">{{ category }}</span>\n\n      <p v-if=\"description\">{{ description }}</p>\n\n      <div class=\"card-meta\">\n        <slot name=\"meta\"></slot>\n      </div>\n\n      <!-- <div class=\"tags\" v-if=\"tags && tags.length\"> -->\n        <span v-for=\"(tag, index) in tags\" :key=\"index\" class=\"tag\">\n          {{ tag }}\n        </span>\n      <!-- </div> -->\n      <p v-if=\"year\" class=\"year\">{{ year }}</p>\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CardPage',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    image: {\n      type: String,\n      required: true\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    category: {\n      type: String,\n      default: ''\n    },\n    year: {\n      type: String,\n      default: ''\n    },\n    tags: {\n      type: Array,\n      default: () => []\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  width: 300px;\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\nimg {\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n}\n\n.content {\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\nh3 {\n  color: #2c3e50;\n  margin: 0 0 10px;\n  font-size: 1.2em;\n}\n\n.category {\n  background: #42b983;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8em;\n}\n\n.p {\n  color: #666;\n  font-size: 0.9em;\n  line-height: 1.6;\n  margin-bottom: 15px;\n}\n\n.card-meta {\n  margin-top: 10px;\n}\n\n.tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 10px;\n}\n\n.tag {\n  background: #f0f0f0;\n  color: #666;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8em;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;mBADnB;;EAGSA,KAAK,EAAC;AAAS;;EAHxBC,GAAA;AAAA;;EAAAA,GAAA;EAM4BD,KAAK,EAAC;;;EANlCC,GAAA;AAAA;;EAUWD,KAAK,EAAC;AAAW;;EAV5BC,GAAA;EAmBqBD,KAAK,EAAC;;;uBAlBzBE,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CAA+B;IAAzBC,GAAG,EAAEC,MAAA,CAAAC,KAAK;IAAGC,GAAG,EAAEF,MAAA,CAAAG;0BAF5BC,UAAA,GAGIN,mBAAA,CAkBM,OAlBNO,UAkBM,GAhBML,MAAA,CAAAG,KAAK,I,cAAfP,mBAAA,CAAiC,MALvCU,UAAA,EAAAC,gBAAA,CAK0BP,MAAA,CAAAG,KAAK,oBAL/BK,mBAAA,gBAMkBR,MAAA,CAAAS,QAAQ,I,cAApBb,mBAAA,CAA4D,QAA5Dc,UAA4D,EAAAH,gBAAA,CAAlBP,MAAA,CAAAS,QAAQ,oBANxDD,mBAAA,gBAQeR,MAAA,CAAAW,WAAW,I,cAApBf,mBAAA,CAA2C,KARjDgB,UAAA,EAAAL,gBAAA,CAQ+BP,MAAA,CAAAW,WAAW,oBAR1CH,mBAAA,gBAUMV,mBAAA,CAEM,OAFNe,UAEM,GADJC,WAAA,CAAyBC,IAAA,CAAAC,MAAA,cAAAC,SAAA,Q,GAG3BT,mBAAA,uDAAsD,G,kBACpDZ,mBAAA,CAEOsB,SAAA,QAjBfC,WAAA,CAeqCnB,MAAA,CAAAoB,IAAI,EAfzC,CAesBC,GAAG,EAAEC,KAAK;yBAAxB1B,mBAAA,CAEO;MAF6BD,GAAG,EAAE2B,KAAK;MAAE5B,KAAK,EAAC;wBACjD2B,GAAG;kCAEVb,mBAAA,YAAe,EACNR,MAAA,CAAAuB,IAAI,I,cAAb3B,mBAAA,CAA0C,KAA1C4B,UAA0C,EAAAjB,gBAAA,CAAXP,MAAA,CAAAuB,IAAI,oBAnBzCf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}