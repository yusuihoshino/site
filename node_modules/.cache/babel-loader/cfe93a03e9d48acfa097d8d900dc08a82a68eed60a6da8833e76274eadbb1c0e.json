{"ast":null,"code":"import \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.substr.js\";\nimport \"core-js/modules/web.btoa.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nexport default {\n  name: 'SideNavbar',\n  props: {\n    isMenuOpen: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: true,\n      currentColor: localStorage.getItem('theme-color') || '#ffffff'\n    };\n  },\n  created: function created() {\n    // 保存された色があればそれを、なければデフォルトの白を使用\n    var savedColor = localStorage.getItem('theme-color') || '#ffffff';\n    this.currentColor = savedColor;\n\n    // ページ読み込み時に保存された色を適用（ファビコンも含めて）\n    this.applyThemeColor(savedColor);\n\n    // 初回読み込み時にもファビコンを更新\n    this.updateFavicon(savedColor);\n  },\n  methods: {\n    toggleSidebar: function toggleSidebar() {\n      this.isOpen = !this.isOpen;\n      this.$emit('sidebar-toggle', this.isOpen);\n    },\n    handleColorChange: function handleColorChange(event) {\n      var color = event.target.value;\n      this.currentColor = color;\n      this.applyThemeColor(color);\n      localStorage.setItem('theme-color', color);\n    },\n    applyThemeColor: function applyThemeColor(color) {\n      // 色の明るさを計算\n      var r = parseInt(color.substr(1, 2), 16);\n      var g = parseInt(color.substr(3, 2), 16);\n      var b = parseInt(color.substr(5, 2), 16);\n      var brightness = (r * 299 + g * 587 + b * 114) / 1000;\n\n      // 明るさに基づいてテーマを切り替え\n      var theme = brightness > 128 ? 'light' : 'dark';\n      document.documentElement.setAttribute('data-theme', theme);\n\n      // CSSカスタムプロパティを更新\n      var style = document.documentElement.style;\n      if (theme === 'dark') {\n        style.setProperty('--font-black', '#ffffff');\n        style.setProperty('--font-white', '#dddddd');\n        style.setProperty('--img-gray', '#999999');\n      } else {\n        style.setProperty('--font-black', '#333333');\n        style.setProperty('--font-white', '#666666');\n        style.setProperty('--img-gray', '#dddddd'); //明るい時の画像とサイドバーの色\n      }\n\n      // 背景色を設定\n      document.body.style.backgroundColor = color;\n\n      // ファビコンの色を変更\n      this.updateFavicon(color);\n    },\n    updateFavicon: function updateFavicon(color) {\n      // SVGファビコンを作成\n      var svg = \"\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\">\\n          <circle cx=\\\"16\\\" cy=\\\"16\\\" r=\\\"16\\\" fill=\\\"\".concat(color, \"\\\"/>\\n        </svg>\\n      \");\n\n      // SVGをBase64エンコード\n      var base64 = btoa(svg);\n\n      // 既存のファビコンを探す\n      var favicon = document.querySelector('link[rel=\"icon\"]');\n\n      // ファビコンが存在しない場合は新規作成\n      if (!favicon) {\n        favicon = document.createElement('link');\n        favicon.rel = 'icon';\n        document.head.appendChild(favicon);\n      }\n\n      // ファビコンを更新\n      favicon.type = 'image/svg+xml';\n      favicon.href = \"data:image/svg+xml;base64,\".concat(base64);\n    }\n  }\n};","map":{"version":3,"names":["name","props","isMenuOpen","type","Boolean","data","isOpen","currentColor","localStorage","getItem","created","savedColor","applyThemeColor","updateFavicon","methods","toggleSidebar","$emit","handleColorChange","event","color","target","value","setItem","r","parseInt","substr","g","b","brightness","theme","document","documentElement","setAttribute","style","setProperty","body","backgroundColor","svg","concat","base64","btoa","favicon","querySelector","createElement","rel","head","appendChild","href"],"sources":["/Users/yusui/GitHub/Mono/site/src/components/Sidebar.vue"],"sourcesContent":["<template>\n  <nav class=\"sidebar\" :class=\"{ 'open': isMenuOpen }\" id=\"sidebar-left\">\n      <router-link to=\"/\" class=\"sidebar-title\">Yusui<br>Hoshino</router-link>\n\n      <div class=\"sidebar-group\">\n        <router-link to=\"/history\">History</router-link>\n        <router-link to=\"/request\">Request</router-link>\n        <router-link to=\"/portfolio\">Portfolio</router-link>\n        <router-link to=\"/works\">Works</router-link>\n      </div>\n      \n      <div class=\"sidebar-group\">\n        <input \n          type=\"color\" \n          id=\"colorPicker\" \n          class=\"color-picker\" \n          :value=\"currentColor\"\n          @input=\"handleColorChange\"\n        >\n        <a href=\"https://note.com/yusuihoshino\" target=\"_blank\" class=\"link-btn\">note</a>\n        <a href=\"https://x.com/yusuihoshino\" target=\"_blank\" class=\"link-btn\">X</a>\n      </div>  \n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'SideNavbar',\n  props: {\n    isMenuOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isOpen: true,\n      currentColor: localStorage.getItem('theme-color') || '#ffffff'\n    }\n  },\n  created() {\n    // 保存された色があればそれを、なければデフォルトの白を使用\n    const savedColor = localStorage.getItem('theme-color') || '#ffffff';\n    this.currentColor = savedColor;\n    \n    // ページ読み込み時に保存された色を適用（ファビコンも含めて）\n    this.applyThemeColor(savedColor);\n    \n    // 初回読み込み時にもファビコンを更新\n    this.updateFavicon(savedColor);\n  },\n  methods: {\n    toggleSidebar() {\n      this.isOpen = !this.isOpen;\n      this.$emit('sidebar-toggle', this.isOpen);\n    },\n    handleColorChange(event) {\n      const color = event.target.value;\n      this.currentColor = color;\n      this.applyThemeColor(color);\n      localStorage.setItem('theme-color', color);\n    },\n    applyThemeColor(color) {\n      // 色の明るさを計算\n      const r = parseInt(color.substr(1,2), 16);\n      const g = parseInt(color.substr(3,2), 16);\n      const b = parseInt(color.substr(5,2), 16);\n      const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n\n      // 明るさに基づいてテーマを切り替え\n      const theme = brightness > 128 ? 'light' : 'dark';\n      document.documentElement.setAttribute('data-theme', theme);\n\n      // CSSカスタムプロパティを更新\n      const style = document.documentElement.style;\n      if (theme === 'dark') {\n        style.setProperty('--font-black', '#ffffff');\n        style.setProperty('--font-white', '#dddddd');\n        style.setProperty('--img-gray', '#999999');\n      } else {\n        style.setProperty('--font-black', '#333333');\n        style.setProperty('--font-white', '#666666');\n        style.setProperty('--img-gray', '#dddddd');//明るい時の画像とサイドバーの色\n      }\n\n      // 背景色を設定\n      document.body.style.backgroundColor = color;\n\n      // ファビコンの色を変更\n      this.updateFavicon(color);\n    },\n    updateFavicon(color) {\n      // SVGファビコンを作成\n      const svg = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n          <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"${color}\"/>\n        </svg>\n      `;\n\n      // SVGをBase64エンコード\n      const base64 = btoa(svg);\n      \n      // 既存のファビコンを探す\n      let favicon = document.querySelector('link[rel=\"icon\"]');\n      \n      // ファビコンが存在しない場合は新規作成\n      if (!favicon) {\n        favicon = document.createElement('link');\n        favicon.rel = 'icon';\n        document.head.appendChild(favicon);\n      }\n      \n      // ファビコンを更新\n      favicon.type = 'image/svg+xml';\n      favicon.href = `data:image/svg+xml;base64,${base64}`;\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n/* モバイル表示時のスタイル */\n\n\n.sidebar {\n  width: 200px;\n  height: 100vh;\n  background-color: var(--bg-white);\n  position: fixed;\n  left: 0;\n  top: 0;\n  padding: 48px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: var(--card-bg);\n  box-shadow: 0px 0px 3px var(--img-gray);\n  /* background:red; */\n\n  font-size: 0.8rem;\n\n  .sidebar-group {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  a {\n      color: var(--font-black);\n      transition: all 0.2s ease;\n      letter-spacing: 0.15rem;\n\n      &:hover {\n        transform: translateX(10px);\n        letter-spacing: 2px;\n      }\n    }\n\n  .sidebar-title {\n    font-weight: 900;\n  }\n\n  .color-picker {\n    width: 30px;\n    height: 30px;\n    padding: 0;\n    border: none;\n    border-radius: 100px;\n    overflow: hidden;\n    cursor: pointer;\n\n    &::-webkit-color-swatch-wrapper {\n      padding: 0;\n    }\n\n    &::-webkit-color-swatch {\n      border: none;\n      border-radius: 100px;\n      border: solid var(--font-black) 1px;\n    }\n\n    &::-moz-color-swatch {\n      border: none;\n      border-radius: 100px;\n      border: solid var(--font-black) 1px;\n    }\n  }\n}\n/* スマホサイズ 767px以下*/\n@media (max-width: 767px) {\n  .sidebar {\n    transform: translateX(-100%);\n    width: 100%;\n    transition: transform 0.3s ease;\n    z-index: 999;\n    a{\n      font-size: 1.2rem;\n    }\n  }\n\n  .sidebar.open {\n    transform: translateX(0);\n  }\n}\n\n/* PC表示時のスタイル 768px以上*/\n@media (min-width: 768px) {\n  .sidebar {\n    transform: none;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}