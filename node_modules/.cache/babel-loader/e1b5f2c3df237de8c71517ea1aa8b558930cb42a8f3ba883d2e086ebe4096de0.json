{"ast":null,"code":"/* global Masonry, imagesLoaded */\n\nexport function initMasonry(gridElement) {\n  if (!gridElement) return;\n  var masonry = new Masonry(gridElement, {\n    itemSelector: '.grid-item',\n    columnWidth: '.grid-sizer',\n    gutter: '.gutter-sizer',\n    percentPosition: false,\n    horizontalOrder: true,\n    transitionDuration: '0.2s',\n    initLayout: true,\n    fitWidth: true\n  });\n\n  // 画像が読み込まれた後にレイアウトを更新\n  imagesLoaded(gridElement).progress(function () {\n    masonry.layout();\n  });\n  return masonry;\n}\n\n// Vueミックスイン\nexport var masonryMixin = {\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      var grid = _this.$el.querySelector('#grid');\n      if (grid) {\n        // 画像の読み込みを待ってからMasonryを初期化\n        imagesLoaded(grid, function () {\n          _this.masonry = initMasonry(grid);\n        });\n      }\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n    this.$nextTick(function () {\n      if (_this2.masonry) {\n        _this2.masonry.layout();\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.masonry) {\n      this.masonry.destroy();\n    }\n  }\n};","map":{"version":3,"names":["initMasonry","gridElement","masonry","Masonry","itemSelector","columnWidth","gutter","percentPosition","horizontalOrder","transitionDuration","initLayout","fitWidth","imagesLoaded","progress","layout","masonryMixin","mounted","_this","$nextTick","grid","$el","querySelector","updated","_this2","beforeDestroy","destroy"],"sources":["/Users/yusui/GitHub/Mono/site/src/assets/scripts/masonry.js"],"sourcesContent":["/* global Masonry, imagesLoaded */\n\nexport function initMasonry(gridElement) {\n  if (!gridElement) return;\n\n  const masonry = new Masonry(gridElement, {\n    itemSelector: '.grid-item',\n    columnWidth: '.grid-sizer',\n    gutter: '.gutter-sizer',\n    percentPosition: false,\n    horizontalOrder: true,\n    transitionDuration: '0.2s',\n    initLayout: true,\n    fitWidth: true\n  });\n\n  // 画像が読み込まれた後にレイアウトを更新\n  imagesLoaded(gridElement).progress(() => {\n    masonry.layout();\n  });\n\n  return masonry;\n}\n\n// Vueミックスイン\nexport const masonryMixin = {\n  mounted() {\n    this.$nextTick(() => {\n      const grid = this.$el.querySelector('#grid');\n      if (grid) {\n        // 画像の読み込みを待ってからMasonryを初期化\n        imagesLoaded(grid, () => {\n          this.masonry = initMasonry(grid);\n        });\n      }\n    });\n  },\n  \n  updated() {\n    this.$nextTick(() => {\n      if (this.masonry) {\n        this.masonry.layout();\n      }\n    });\n  },\n\n  beforeDestroy() {\n    if (this.masonry) {\n      this.masonry.destroy();\n    }\n  }\n};"],"mappings":"AAAA;;AAEA,OAAO,SAASA,WAAWA,CAACC,WAAW,EAAE;EACvC,IAAI,CAACA,WAAW,EAAE;EAElB,IAAMC,OAAO,GAAG,IAAIC,OAAO,CAACF,WAAW,EAAE;IACvCG,YAAY,EAAE,YAAY;IAC1BC,WAAW,EAAE,aAAa;IAC1BC,MAAM,EAAE,eAAe;IACvBC,eAAe,EAAE,KAAK;IACtBC,eAAe,EAAE,IAAI;IACrBC,kBAAkB,EAAE,MAAM;IAC1BC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACAC,YAAY,CAACX,WAAW,CAAC,CAACY,QAAQ,CAAC,YAAM;IACvCX,OAAO,CAACY,MAAM,CAAC,CAAC;EAClB,CAAC,CAAC;EAEF,OAAOZ,OAAO;AAChB;;AAEA;AACA,OAAO,IAAMa,YAAY,GAAG;EAC1BC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,KAAA;IACR,IAAI,CAACC,SAAS,CAAC,YAAM;MACnB,IAAMC,IAAI,GAAGF,KAAI,CAACG,GAAG,CAACC,aAAa,CAAC,OAAO,CAAC;MAC5C,IAAIF,IAAI,EAAE;QACR;QACAP,YAAY,CAACO,IAAI,EAAE,YAAM;UACvBF,KAAI,CAACf,OAAO,GAAGF,WAAW,CAACmB,IAAI,CAAC;QAClC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAEDG,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,MAAA;IACR,IAAI,CAACL,SAAS,CAAC,YAAM;MACnB,IAAIK,MAAI,CAACrB,OAAO,EAAE;QAChBqB,MAAI,CAACrB,OAAO,CAACY,MAAM,CAAC,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDU,aAAa,WAAbA,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACtB,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACuB,OAAO,CAAC,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}